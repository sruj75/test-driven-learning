---
description: 
globs: 
alwaysApply: false
---
# Frontend Architecture

The TestDrivenLearning frontend is built with Next.js 14 using the App Router architecture and TypeScript/TSX. It follows a structured component organization and user flow focused on test-driven learning.

## Page Structure

The application is organized into the following key pages:

- **Landing Page**: Chat interface for goal-setting and journey creation (`app/page.tsx`)
- **Authentication**: Google OAuth sign-in flow (`app/auth/signin.tsx`)
- **Dashboard**: Central hub showing domains and progress (`app/dashboard/page.tsx`)
- **Domain Journey**: Active learning process within a domain (`app/domains/[id]/page.tsx`)
- **Tests**: Interactive test interfaces (`app/domains/[id]/tests/[id].tsx`)
- **Resources**: Audio-based recommendations and learning content (`app/domains/[id]/resources/page.tsx`)
- **Profile/Settings**: User profile and preference management (`app/profile/page.tsx`)
- **Payment**: Subscription plans and checkout flow (`app/payment/page.tsx`)

## Component Organization

Components are organized by functionality:

- `layout/` - Page layouts and navigation components
- `ui/` - Reusable UI components
- `auth/` - Authentication components
- `tests/` - Test-related components
- `resources/` - Resource display and feedback components
- `payment/` - Payment-related components
- `chat/` - AI chat interface components

## User Flow

1. User lands on homepage with chat interface
2. After setting goals, user authenticates with Google
3. User subscribes to access personalized content
4. Dashboard displays multiple learning domains
5. Within a domain, user follows the test-resource cycle:
   - Takes test to identify knowledge gaps
   - Receives audio-based resource recommendations
   - Marks resources as helpful/not helpful
   - Gets alternative resources if needed
   - Takes another test to validate learning
6. Progress is tracked across learning sessions
